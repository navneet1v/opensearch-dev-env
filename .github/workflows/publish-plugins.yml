name: Publish untracked plugins to release

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  publish-plugins:
    runs-on: ubuntu-latest
    env:
      RELEASE_TAG: artifacts-${{ github.run_id }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Install Dependencies
        run: |
          sudo wget -qO /usr/local/bin/yq https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64
          sudo chmod a+x /usr/local/bin/yq
          /usr/local/bin/yq --version
      - name: Publish untracked plugins
        run: |
          mkdir .downloads

          paths=(./charts/opensearch-dashboards/plugins/artifacts.json ./charts/opensearch/plugins/artifacts.json)
          for path in "${paths[@]}"; do
            plugins=$(yq e -o=j -I=0 '.plugins[]' $path)
            for line in $plugins; do
              name=$(echo "$line" | yq e '.name' -)
              url=$(echo "$line" | yq e '.url' -)
              if [[ $url != "${{ github.server_url }}/${{ github.repository }}"* ]]; then
                echo "Downloading $name: $url"
                curl -o ./.downloads/$name.zip -L $url
              fi
            done
          done
      - name: Create release tag if there were new plugins downloaded
        id: tagging
        run: |
          if [ -n "$(ls .downloads)" ]; then
            git tag ${{ env.RELEASE_TAG }}
            git push origin ${{ env.RELEASE_TAG }}
            echo "tag_created=true" >> "$GITHUB_ENV"
          fi
      - name: Create a release and push the downloaded plugins to assets
        id: release
        if: env.tag_created == true
        uses: softprops/action-gh-release@v1
        with:
          prerelease: true
          files: ./.downloads/*
          tag_name: ${{ env.RELEASE_TAG }}
      - name: Update manifest
        if: env.tag_created == true
        run: |
          artifacts=$(echo '${{ steps.release.outputs.assets }}' | yq e -o=j -I=0 '.[]' -)
          for line in $artifacts; do
            filename=$(echo "$line" | yq e '.name' -)
            # filename without extension which should be the plugin name
            name="${filename%.*}"
            url=$(echo "$line" | yq e '.browser_download_url' -)

            paths=(./charts/opensearch-dashboards/plugins/artifacts.json ./charts/opensearch/plugins/artifacts.json)
            for path in "${paths[@]}"; do
              echo "Replacing $name with url: $url"
              name="$name" url="$url" yq -i '.plugins |= map(select(.name == strenv(name)).url=strenv(url))' $path
              cat $path
            done
          done
      - name: Create pull request
        if: env.tag_created == true
        uses: peter-evans/create-pull-request@v5
        with:
          commit-message: update artifacts.json
          title: Update artifacts.json
          branch: create-pull-request/update-artifacts-json
          signoff: true
          delete-branch: true
          add-paths: |
            charts/opensearch-dashboards/plugins/artifacts.json
            charts/opensearch/plugins/artifacts.json
